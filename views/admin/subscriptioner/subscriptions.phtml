<?php
/**
 * Subscriptioner tab and subscriptioner popup views
 *
 * @copyright 2016 Linguistica 360
 */

/**
 * Converts given date to string, supports date of lifetime and recurring
 * subscription. Outputs empty string when given null date.
 *
 * @param date $date date to conver
 * @return string text representation of date
 */
function dateToString($date)
{
    if ($date == Am_Period::MAX_SQL_DATE) return 'Lifetime';
    elseif ($date == Am_Period::RECURRING_SQL_DATE) return 'Recurring';
    elseif ($date) return amDate($date);
    return '';
}

/**
 * Returns access delete URL based on access ID
 *
 * @param int $accessId access id
 * @return string URL
 */
function deleteUrl($context, $accessId, $user_id)
{
    return $context->pUrl(null, "remove/id/$accessId/user_id/$user_id");
}

$this->setLayout('admin/user-layout.phtml');

$statusMap = [
    Access::EXPIRED => '<em>Expired</em>',
    Access::ACTIVE  => '<strong>Active</strong>',
    Access::FUTURE  => '<em><strong>Future</strong></em>',
];

?>
<div id="user-access-info">
<hr>

<h1>User Subscriptions</h1>

<div class="user-access-title" data-status=".access-1,.access-2">
    User currently has following subscriptions:
</div>

<br>

<div class="grid-container">
    <table class="grid" id="subscriptioner_table">
        <tr>
            <th><b>Product</b></th>
            <th><b>From</b></th>
            <th><b>To</b></th>
            <th><b>Status</b></th>
            <th><b>Source</b></th>
            <th><b>Paid</b></th>
            <th><b>Amount</b></th>
            <th><b>Edit</b></th>
            <th><b>Delete</b></th>
        </tr>

        <?php foreach ($accessRecords as $access): ?>

        <tr class="access access-<?= $access->getStatus()?>"
            data-invoice-id="<?= $access->invoice_id ?>">
            <td><?= "#$access->product_id  - $access->product_title"; ?></td>

            <td><?= dateToString($access->begin_date) ?></td>
            <td><?= dateToString($access->expire_date) ?></td>

            <td><?= $statusMap[$access->getStatus()]; ?></td>

            <?php if ($access->invoice_id): ?>
                <td><?= "Invoice (#{$access->invoice_id})" ?>

                <td><strong>YES</strong> (<?= $access->paysys_id ?>)</td>
                <?php if ($access->paysys_id === 'free'): ?>
                <td>-</td>
                <?php else: ?>
                <td>$<?= $access->amount ?></td>
                <?php endif ?>
                <td>
                    <a href="edit"><?= $this->icon('edit', 'Edit') ?></a>
                </td>
            <?php else: ?>
                <td>Manually Added (No Invoice)</td>
                <td>NO</td>
                <td>-</td>
                <td style="color: red; font-weight: bold;">Invalid</td>
            <?php endif ?>
            <td>
                <a href="<?= deleteUrl($this, $access->access_id, $user_id) ?>">
                    <?= $this->icon('delete', 'Delete') ?>
                </a>
            </td>
        </tr>

        <?php endforeach; ?>

        <tr>
            <td><a href="add"><?= $this->icon('add', 'Add') ?></a></td>
        </tr>
    </table>
</div>
</div>

<div id="subscription-info"></div>

<script>
var gAction = null;

$('#subscriptioner_table').delegate('a', 'click', function (e) {
    var action = $(this).attr('href');
    if (['add', 'edit'].indexOf(action) === -1) {
        return confirm('Are you sure you want to remove this subscription');
    }

    e.preventDefault();

    var id = 0;
    if (action === 'edit') id = $(this).parents('tr').data('invoice-id');
    var url = window.rootUrl + "/subscriptioner/admin/subscription/id/" + id +
        '/user_id/' + <?= $user_id ?>

    gAction = action;

    $("#subscription-info").html("Loading...").load(url, function() {
        setTimeout(function () {
            $('#paysys').trigger('change');
            $('#products').trigger('change');
        }, 10); // populate the expiration date and price for default sub

        $('#subscription-info input.datepicker').datepicker({
            defaultDate: window.uiDefaultDate,
            dateFormat: window.uiDateFormat,
            changeMonth: true,
            changeYear: true,
            showButtonPanel: true,
            beforeShow: function (input) {
                if (!$(input).is('#expire_date')) return;
                setTimeout(function () {
                    var buttonPane = $( input )
                        .datepicker('widget' )
                        .find('.ui-datepicker-buttonpane');

                    var classes = 'ui-datepicker-clear ui-state-default ' +
                                  'ui-priority-primary ui-corner-all';

                    $( '<button>', {
                        text: 'Lifetime',
                        click: function() {
                            var lifetime = new Date('2037-12-31');
                            $(input).datepicker('setDate', lifetime);
                        }
                    }).appendTo(buttonPane).addClass(classes);
                }, 1); // 1ms will delay it till dialog is shown
            },
        });
    });

    $("#subscription-info").dialog({
        width: 600,
        modal: true,
        buttons: { },
        autoOpen: true,
        closeOnEscape: true,
        title: 'Subscription',
        position: { my: 'center', at: 'center top', of: window },
    });

    return false;
});

$("#subscription-info-form").live('submit', function () {
    if ($('#paysys').val() !== 'free' && gAction === 'add'
            && parseFloat($('#payment-amount').val()) <= 0) {
        alert('Invalid Amount');
        return false;
    }

    $(this).ajaxSubmit({
        success: function (data){
            if (data.ok) window.location.reload();
            else $("#subscription-info").html(data);
        }
    });

    return false;
});

var oldprice = null;

$('#subscription-info').delegate('#products', 'change', function () {
    if (gAction === 'add') {
        var term = $('#products').find('option:selected').data('term');
        var price = $('#products').find('option:selected').data('price');
        var duration = parseInt(term);
        var date = $('#begin_date').datepicker('getDate');
        if (term.indexOf('m') !== -1) date.setMonth(date.getMonth() + duration);
        else if (term.indexOf('y') !== -1) {
            date.setFullYear(date.getFullYear() + duration);
        }
        else date = new Date(term);
        $('#expire_date').datepicker('setDate', date);

        if (oldprice) oldprice = price;
        else $('#payment-amount').val(price);
    }
});

$('#subscription-info').delegate('#paysys', 'change', function () {
    if ($('#paysys').val() === 'free') {
        oldprice = $('#payment-amount').val();
        $('#payment-amount').val('0.00');

        $('#row-invoice-receipt').hide();
        $('#row-payment-amount').hide();
    }
    else if (oldprice) {
        $('#payment-amount').val(oldprice);
        oldprice = null;

        $('#row-invoice-receipt').show();
        $('#row-payment-amount').show();
    }
});
</script>
